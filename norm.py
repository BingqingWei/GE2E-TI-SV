__author__ = 'Bingqing Wei'
import numpy as np
from config import *

regularize = lambda x: np.expand_dims(np.array(x), axis=0)

norm_dict = {
    8000: {
        'vox_mels_mean': regularize(
            [-3.02734108, -2.4091782, -2.09676263, -2.14122718, -2.27263581,
             -2.29585195, -2.32880616, -2.37786825, -2.46338034, -2.61611401,
             -2.77438724, -2.93828297, -3.10202187, -3.23742286, -3.36306108,
             -3.48222725, -3.57529019, -3.65443268, -3.71971935, -3.7786455,
             -3.81745664, -3.83876491, -3.85377475, -3.85456816, -3.87392065,
             -3.90093468, -3.94232578, -3.99431193, -4.04679665, -4.09095003,
             -4.11386166, -4.12873658, -4.15824979, -4.23098748, -4.32646621,
             -4.41495825, -4.49644065, -4.55911425, -4.61389892, -4.92468198]),

        'vox_mels_std': regularize(
            [0.99771783, 1.04186374, 1.10912619, 1.14970144, 1.17117287,
             1.21564558, 1.25839678, 1.28691782, 1.31305374, 1.33677685,
             1.35104074, 1.34753574, 1.32738919, 1.3035531, 1.2803645,
             1.26185408, 1.24903902, 1.23968701, 1.23258394, 1.22656812,
             1.22164563, 1.21799986, 1.21723812, 1.21799928, 1.21524414,
             1.20804512, 1.19542939, 1.17863671, 1.15915348, 1.1411941,
             1.13073703, 1.12894445, 1.12746134, 1.11255488, 1.0874017,
             1.06459398, 1.04497637, 1.0271965, 1.01555041, 0.92520637]),

        'vctk_mels_mean': regularize(
            [-2.20264042, -2.12578949, -1.95736143, -2.06582957, -2.41532483,
             -2.50703519, -2.47427188, -2.51433437, -2.62260055, -2.84876494,
             -3.1197115, -3.36351928, -3.57581458, -3.72864567, -3.81024453,
             -3.84810831, -3.8422651, -3.83540179, -3.84128367, -3.87757678,
             -3.91938242, -3.94998426, -3.97376936, -3.97255475, -3.97646164,
             -3.98795116, -4.01634964, -4.05846623, -4.11231269, -4.18206786,
             -4.22262974, -4.23214157, -4.23298933, -4.24964223, -4.26909383,
             -4.29360511, -4.32171169, -4.35202394, -4.41442044, -4.7973996]),

        'vctk_mels_std': regularize(
            [0.6176385, 1.0793721, 1.66721085, 1.81359393, 1.68252913,
             1.66599848, 1.72437261, 1.73588632, 1.72109329, 1.68165345,
             1.6251986, 1.56902801, 1.50822147, 1.44305163, 1.39288623,
             1.36586753, 1.35992709, 1.35837829, 1.35898632, 1.3554012,
             1.34880004, 1.33844371, 1.3263748, 1.31874043, 1.30917467,
             1.29611295, 1.27763259, 1.25410011, 1.22551194, 1.19106073,
             1.16733687, 1.16243238, 1.16666534, 1.16238329, 1.1533377,
             1.14389358, 1.13477486, 1.12475346, 1.10918917, 0.97668915])
    },

    16000: {
        'vox_mels_std': regularize([0.79253824, 0.95568111, 1.03135885, 1.07364397, 1.13287694,
       1.1822562 , 1.21803364, 1.24426506, 1.25345626, 1.23576511,
       1.20714404, 1.18124518, 1.16705188, 1.16272248, 1.15926823,
       1.16135715, 1.1644568 , 1.17092195, 1.17663273, 1.17687577,
       1.16864213, 1.15415572, 1.1381899 , 1.12978567, 1.13454324,
       1.13690514, 1.12191533, 1.10769511, 1.10098966, 1.09810237,
       1.1039881 , 1.10556223, 1.10371047, 1.10065716, 1.10039795,
       1.10142111, 1.10020106, 1.101017  , 1.0939785 , 1.05114909]),

        'vox_mels_mean': regularize([-4.71178974, -4.00555932, -3.68739234, -3.61330494, -3.44262125,
       -3.32480903, -3.32901131, -3.36576619, -3.47743899, -3.61406146,
       -3.69277246, -3.79758917, -3.8767695 , -3.88584148, -3.93114135,
       -3.91828874, -3.8912064 , -3.84360063, -3.79827481, -3.76434663,
       -3.76121846, -3.7745565 , -3.77954187, -3.765958  , -3.7265341 ,
       -3.73474359, -3.80772409, -3.87869284, -3.92753826, -3.94742231,
       -3.94533451, -3.97345291, -4.05042497, -4.1470114 , -4.23868382,
       -4.31958369, -4.37681811, -4.39478979, -4.43482021, -4.62367758])
    }

}


def normalize_batch(batch, dataset):
    if not config.norm:
        return batch

    dic = norm_dict[config.sr]
    if dataset == 'voxceleb':
        batch = (batch - dic['vox_mels_mean']) / dic['vox_mels_std']
    else:
        batch = (batch - dic['vctk_mels_mean']) / dic['vctk_mels_std']
    return batch
