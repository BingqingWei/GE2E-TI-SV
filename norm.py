__author__ = 'Bingqing Wei'
import numpy as np
from config import *

regularize = lambda x: np.expand_dims(np.array(x), axis=0)

norm_dict = {
    8000: {
        'vox_mels_mean': regularize(
            [-3.02734108, -2.4091782, -2.09676263, -2.14122718, -2.27263581,
             -2.29585195, -2.32880616, -2.37786825, -2.46338034, -2.61611401,
             -2.77438724, -2.93828297, -3.10202187, -3.23742286, -3.36306108,
             -3.48222725, -3.57529019, -3.65443268, -3.71971935, -3.7786455,
             -3.81745664, -3.83876491, -3.85377475, -3.85456816, -3.87392065,
             -3.90093468, -3.94232578, -3.99431193, -4.04679665, -4.09095003,
             -4.11386166, -4.12873658, -4.15824979, -4.23098748, -4.32646621,
             -4.41495825, -4.49644065, -4.55911425, -4.61389892, -4.92468198]),

        'vox_mels_std': regularize(
            [0.99771783, 1.04186374, 1.10912619, 1.14970144, 1.17117287,
             1.21564558, 1.25839678, 1.28691782, 1.31305374, 1.33677685,
             1.35104074, 1.34753574, 1.32738919, 1.3035531, 1.2803645,
             1.26185408, 1.24903902, 1.23968701, 1.23258394, 1.22656812,
             1.22164563, 1.21799986, 1.21723812, 1.21799928, 1.21524414,
             1.20804512, 1.19542939, 1.17863671, 1.15915348, 1.1411941,
             1.13073703, 1.12894445, 1.12746134, 1.11255488, 1.0874017,
             1.06459398, 1.04497637, 1.0271965, 1.01555041, 0.92520637]),

        'vctk_mels_mean': regularize(
            [-2.20264042, -2.12578949, -1.95736143, -2.06582957, -2.41532483,
             -2.50703519, -2.47427188, -2.51433437, -2.62260055, -2.84876494,
             -3.1197115, -3.36351928, -3.57581458, -3.72864567, -3.81024453,
             -3.84810831, -3.8422651, -3.83540179, -3.84128367, -3.87757678,
             -3.91938242, -3.94998426, -3.97376936, -3.97255475, -3.97646164,
             -3.98795116, -4.01634964, -4.05846623, -4.11231269, -4.18206786,
             -4.22262974, -4.23214157, -4.23298933, -4.24964223, -4.26909383,
             -4.29360511, -4.32171169, -4.35202394, -4.41442044, -4.7973996]),

        'vctk_mels_std': regularize(
            [0.6176385, 1.0793721, 1.66721085, 1.81359393, 1.68252913,
             1.66599848, 1.72437261, 1.73588632, 1.72109329, 1.68165345,
             1.6251986, 1.56902801, 1.50822147, 1.44305163, 1.39288623,
             1.36586753, 1.35992709, 1.35837829, 1.35898632, 1.3554012,
             1.34880004, 1.33844371, 1.3263748, 1.31874043, 1.30917467,
             1.29611295, 1.27763259, 1.25410011, 1.22551194, 1.19106073,
             1.16733687, 1.16243238, 1.16666534, 1.16238329, 1.1533377,
             1.14389358, 1.13477486, 1.12475346, 1.10918917, 0.97668915])
    },

    16000: {
        'vox_mels_std': regularize(
            [0.78383318, 0.95543518, 1.03317394, 1.0767317, 1.13778426,
             1.18724283, 1.2241029, 1.2512796, 1.25967117, 1.24085411,
             1.21200494, 1.18546952, 1.17034338, 1.16592963, 1.16168548,
             1.16351539, 1.16623039, 1.1725729, 1.17837895, 1.17812432,
             1.16905651, 1.15360282, 1.13704641, 1.1283097, 1.13317165,
             1.13487159, 1.11840387, 1.10311065, 1.09616413, 1.09428552,
             1.10121389, 1.10358232, 1.1023487, 1.10009645, 1.10027262,
             1.10177391, 1.1008523, 1.10139503, 1.09376579, 1.04864213]),

        'vox_mels_mean': regularize(
            [-4.73856274, -4.04039828, -3.73711651, -3.66497027, -3.4946293,
             -3.38204023, -3.389036, -3.43164266, -3.54824004, -3.68541215,
             -3.76343427, -3.86773862, -3.9474246, -3.95827151, -4.00513238,
             -3.99451745, -3.96893584, -3.92248972, -3.87780069, -3.84455396,
             -3.8418197, -3.8555673, -3.86103681, -3.84749287, -3.80822157,
             -3.81643344, -3.89024474, -3.96194756, -4.01029579, -4.02869216,
             -4.023842, -4.04790481, -4.1208707, -4.21429061, -4.3035119,
             -4.38186758, -4.43620504, -4.45253795, -4.49203002, -4.67743044])
    }

}


def normalize_batch(batch, dataset):
    dic = norm_dict[config.sr]
    if dataset == 'voxceleb':
        batch = (batch - dic['vox_mels_mean']) / dic['vox_mels_std']
    else:
        batch = (batch - dic['vctk_mels_mean']) / dic['vctk_mels_std']
    return batch
